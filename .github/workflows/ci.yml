name: CI   # Nom du workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Permet d'exécuter le workflow manuellement depuis l'onglet Actions

jobs:
  Test:
    name: Tests on ${{ matrix.platform }} for Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }} # Environnement (OS) de la routine
    timeout-minutes: 30             # Limite la durée de la routine
    strategy:
      fail-fast: false              # Continue les autres routines si une matrice échoue.
      matrix:                       
        platform: [windows-latest ]
        python-version: ["3.13"]

    steps:
      # Récupération du dépôt dans l'environnement
      - name: Checkout code
        uses: actions/checkout@v4

      # Ajout du chemin du projet au PYTHONPATH
      - name: Ajouter le repo au PYTHONPATH
        run: echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV

      # Installation de Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Installation de CUDA
      - name: Install Cuda for DLLs
        uses: Jimver/cuda-toolkit@v0.2.21
        id: cuda-toolkit
        with:
          cuda: '12.6.0'

      # Installation des dépendances du projet
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pycuda
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu126
          python -m pip install -r requirements.txt

      # Vérification de l'import du module
      - name: Vérifier l'import du module
        run: python -c "from python_tracer.utils.libs import spline; print('Import réussi')"

      # Lancement des tests avec pytest
      - name: Run tests with pytest
        uses: aganders3/headless-gui@v2
        with:
          run: python -m pytest

      # Upload du test sur codecov.io (nécessite l'ajout d'une variable secrète)
      - name: Upload coverage report to Codecov
        if: matrix.platform == 'windows-latest' && matrix.python-version == '3.13'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
